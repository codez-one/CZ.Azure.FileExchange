name: Azure Static Web Apps CI/CD

on:
  push:
    branches:
      - main
  pull_request:
    types: [opened, synchronize, reopened, closed]
    branches:
      - main

jobs:
  build_and_deploy_job:
    if: github.event_name == 'push' || (github.event_name == 'pull_request' && github.event.action != 'closed')
    runs-on: ubuntu-latest
    name: Build and Deploy Job
    steps:
      - uses: actions/checkout@v2
        with:
          submodules: true
      - name: Setup .NET Core SDK
        uses: actions/setup-dotnet@v1.9.0
        with:
          # Optional SDK version(s) to use. If not provided, will install global.json version when available. Examples: 2.2.104, 3.1, 3.1.x
          dotnet-version: 6.0.x
      - name: Restore dependencies
        run: dotnet restore
      - name: Build
        run: dotnet build --no-restore
      - name: Publish Frontend
        run: dotnet publish ./src/CZ.Azure.FileExchange/ -o temp/frontend
      - name: Publish API
        run: dotnet publish ./src/CZ.Azure.FileExchange.Api/ -o temp/api
      - name: Build And Deploy
        uses: Amadevus/pwsh-script@v2
        with:
          script: './build/deploy.ps1 -Token ${{ secrets.AZURE_STATIC_WEB_APPS_API_TOKEN_KINDDUNE004C2C103 }} -appBuildOutput ./temp/frontend/wwwroot/ -apiBuildOutput ./temp/api/  -envrionmentName ${{ github.event.number }} -pullrequestTitle "something" -branchName ${{ github.head_ref	}} -Verbose'
  close_pull_request_job:
    if: github.event_name == 'pull_request' && github.event.action == 'closed'
    runs-on: ubuntu-latest
    name: Close Pull Request Job
    steps:
      - name: Build And Deploy
        uses: Amadevus/pwsh-script@v2
        with:
          script: './build/deploy.ps1 -Token ${{ secrets.AZURE_STATIC_WEB_APPS_API_TOKEN_KINDDUNE004C2C103 }} -appBuildOutput ./temp/frontend/wwwroot/ -apiBuildOutput ./temp/api/  -envrionmentName ${{ github.event.number }} -pullrequestTitle "something" -branchName ${{ github.head_ref	}} -Delete -Verbose'
  compile_bicep:
    runs-on: 'ubuntu-latest'
    name: compile main bicep
    steps:
      - uses: actions/checkout@v2
        with:
          submodules: true
      - name: compile bicep
        uses: Azure/bicep-build-action@v1.0.0
        with:
          bicepFilePath: main.bicep
